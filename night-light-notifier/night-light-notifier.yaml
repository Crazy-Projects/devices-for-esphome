# These substitutions allow the end user to override certain values
substitutions:
  name: "night-light-notifier"

esphome:
  name: "${name}"
  # Automatically add the mac address to the name
  # so you can use a single firmware for all devices
  name_add_mac_suffix: true

  # This will allow for (future) project identification,
  # configuration and updates.
  project:
    name: esphome.light-notifier
    version: "1.0"

esp8266:
  board: nodemcuv2

# To be able to get logs from the device via serial and api.
logger:

# API is a requirement of the dashboard import.
api:

# OTA is required for Over-the-Air updating
ota:

# This should point to the public location of this yaml file.
dashboard_import:
  package_import_url: github://Crazy-Projects/devices-for-esphome/night-light-notifier/night-light-notifier.yaml

wifi:
  # Set up a wifi access point
  ap:
    password: "12345678"

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device.
captive_portal:

# Sets up the improv via serial client for Wi-Fi provisioning
improv_serial:

######################################
## Begin the actual device settings ##
######################################
i2c:
  sda: GPIO4
  scl: GPIO5
  scan: true

sensor:
  - platform: bh1750
    name: "Nivel luz ambiental"
    id: lux
    address: 0x23
    measurement_duration: 254
    update_interval: 60s

light:
  - platform: fastled_clockless
    name: "Luz"
    id: light_out
    chipset: WS2812B
    pin: GPIO14
    rgb_order: GRB
    num_leds: 12
    effects:
      - addressable_rainbow:
      - addressable_color_wipe:
      - random:
      - pulse:
      - strobe:
      - strobe:
          name: strobe_rgb
          colors:
            - state: true
              brightness: 100%
              red: 100%
              green: 90%
              blue: 0%
              duration: 500ms
            - state: false
              duration: 250ms
            - state: true
              brightness: 100%
              red: 0%
              green: 100%
              blue: 0%
              duration: 500ms
      - flicker:
      - addressable_scan:
      - addressable_twinkle:
      - addressable_random_twinkle:
      - addressable_fireworks:
      - addressable_flicker:

switch:
  - platform: template
    name: "Activar sensor movimiento"
    id: motion_enabled
    optimistic: True

binary_sensor:
  - platform: gpio
    pin: GPIO12
    name: "Presencia"
    filters:
      - delayed_off: 5s
    device_class: motion
    on_press:
      then:
        - if:
            condition:
              switch.is_on: motion_enabled
            then:
              - light.turn_on:
                  id: light_out
                  brightness: 50%
                  red: 100%
                  green: 0%
                  blue: 0%
    on_release:
      then:
        - if:
            condition:
              switch.is_on: motion_enabled
            then:
                - light.turn_off:
                    id: light_out
